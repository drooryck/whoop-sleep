{"frames":[{"func":"sleeps %>% select(-Cycle.start.time, -Cycle.end.time, -Cycle.timezone, \n    -Sleep.performance.., -In.bed.duration..min., -Sleep.debt..min. - \n        Sleep.efficiency.., -Nap)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., -Cycle.start.time, -Cycle.end.time, -Cycle.timezone, \n    -Sleep.performance.., -In.bed.duration..min., -Sleep.debt..min. - \n        Sleep.efficiency.., -Nap)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select.data.frame(., -Cycle.start.time, -Cycle.end.time, -Cycle.timezone, \n    -Sleep.performance.., -In.bed.duration..min., -Sleep.debt..min. - \n        Sleep.efficiency.., -Nap)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tidyselect::eval_select(expr(c(...)), data = .data, error_call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_select_impl(data, names(data), as_quosure(expr, env), include = include, \n    exclude = exclude, strict = strict, name_spec = name_spec, \n    allow_rename = allow_rename, allow_empty = allow_empty, allow_predicates = allow_predicates, \n    error_call = error_call, )","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_subscript_errors(out <- vars_select_eval(vars, expr, strict = strict, \n    data = x, name_spec = name_spec, uniquely_named = uniquely_named, \n    allow_rename = allow_rename, allow_empty = allow_empty, allow_predicates = allow_predicates, \n    type = type, error_call = error_call), type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vars_select_eval(vars, expr, strict = strict, data = x, name_spec = name_spec, \n    uniquely_named = uniquely_named, allow_rename = allow_rename, \n    allow_empty = allow_empty, allow_predicates = allow_predicates, \n    type = type, error_call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"walk_data_tree(expr, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_c(expr, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"reduce_sels(node, data_mask, context_mask, init = init)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"walk_data_tree(new, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_minus(expr, data_mask, context_mask, error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_context(expr, context_mask, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_chained_errors(eval_tidy(as_quosure(expr, env), context_mask), \n    call = call, eval_expr = expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    eval_expr <- quo_squash(eval_expr)\n    if (!is_call(eval_expr) || identical(cnd[[\"call\"]], call2(eval_expr[[1]]))) {\n        msg <- \"\" ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_tidy(as_quosure(expr, env), context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    eval_expr <- quo_squash(eval_expr)\n    if (!is_call(eval_expr) || identical(cnd[[\"call\"]], call2(eval_expr[[1]]))) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(c(i = msg), call = call, parent = cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in select(., -Cycle.start.time, -Cycle.end.time, -Cycle.timezone,  : \n  \n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Sleep.debt..min.' not found\n"}